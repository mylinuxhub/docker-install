Create a Directory for Your Project
Create a directory on your system where you'll store the files related to your Docker image.
    #mkdir my-docker-project
    #cd my-docker-project

Create a Dockerfile
Inside the directory, create a file named Dockerfile without any extension.
    #touch Dockerfile

Write Instructions in the Dockerfile
Open the Dockerfile and write the instructions for building your Docker image. Hereâ€™s a basic example:

      # Use an official base image
         FROM ubuntu:20.04

       # Set environment variables (optional)
        ENV DEBIAN_FRONTEND=noninteractive

      # Install necessary packages
        RUN apt-get update && apt-get install -y \
            python3 \
            python3-pip \
            curl \
            git \
            && apt-get clean

      # Copy your application files (if any)
      COPY . /app

      # Set the working directory
      WORKDIR /app

      # Install Python dependencies (if you have a requirements.txt)
      RUN pip3 install -r requirements.txt

      # Expose a port (if your application requires it)
      EXPOSE 8080

     # Define the command to run your application
     CMD ["python3", "your_script.py"]


Explanation:

    FROM: Specifies the base image (e.g., Ubuntu 20.04).
    ENV: Sets environment variables.
    RUN: Executes commands to install packages or perform other actions.
    COPY: Copies files from your local machine into the Docker image.
    WORKDIR: Sets the working directory inside the container.
    EXPOSE: Exposes a specific port.
    CMD: Specifies the command to run when the container starts.


Build the Docker Image
Run the following command in your terminal to build the Docker image:

      #docker build -t my-custom-image .

Explanation:
      -t my-custom-image: Tags your image with the name my-custom-image.
      The . at the end specifies the current directory as the build context.

Verify the Docker Image
List all Docker images to verify that your image was created successfully:

        #docker images

Run a Container from Your Image
Run a container using your custom Docker image:
    #docker run -it --name my-container my-custom-image

Explanation:
     it: Runs the container in interactive mode.
     --name my-container: Names the container my-container.


Save and Share Your Image Locally (Optional)
Save your Docker image to a file for easy sharing:

       #docker save -o my-custom-image.tar my-custom-image

Load a Docker Image from a File
To load a Docker image from a .tar file:
        #docker load -i my-custom-image.tar


